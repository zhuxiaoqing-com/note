补码原理 -- 负数为什么要用补码表示
文首
   我们都知道负数在计算机中是以补码表示的，那为什么呢？本文尝试了解补码的原理。而想要理解它，首先的理解算术中 “模” 的概念。
   所以首先看一下什么是模，然后通过一个小例子来理解补码。
   1、模(Modulo)
      1、1什么是模数
	 在数学中，模算术是一个整数的算术系统，其中数字在达到某个值时“缠绕”在一起――模(复数模)。
	 1、1、1 理解
	     模 是指一个计量系统的计数范围。如时钟等。计算机也是一个计算器，她也是有一个计量范围，即都存在一个"模"。
	     如时钟的计量范围是 0~11，模=12
	     32位计算机的计量范围是2^32， 模 = 2^32.
	     "模"式计量器产生"溢出"的量，它的值在计量器上表示不出来，计量器上只能表示出模的余数，如12的余数有
		0,1,2,3,4,5,6,7,8,9,10,11
      
      1、2 补数
	 假设当前时针指向11点，而准确时间是8点，调整时间可有一下两种说法：
	    - 一种是倒拨3小时，即：11 - 3 = 8
	    - 另一种是顺拨9小时：11+9 = 12+8 = 8
	    在以模为12的系统中，加9和减3效果是一样的，因此凡是减3运算，都可以用加9来代替。对“模”12而言，9和3互为补数(二者相加等于模)。
	    所以我们可以得出一个结论，即在有模的计量系统中，减一个数等于加上它的补数，从而实现将减法运算转化为加法运算的目的。

      1、3 再谈"模"
	从上面的化减法为加法，以及所谓的溢出等等可以看到，"模"可以说就是一个太极，阴阳转化，周而复始，无始无终，循环往复。

   2、补码原理
     计算机上的补码就是算术里的补数

     设我们有一个4位的计算机，则其计量范围即模是
     2^4 = 16,所以其能够表示的范围是0~15，现在以计算5-3为例，我们知道在计算机中，加法器实现最简单，所以很多运算最终都要转为加法运算，因此
     5-3就要转化为加法。  5-3 = 5 + -3

     # 按以上理论，减一个数等于加上它的补数，所以
     5-3
     #等价于
     5+(16-3);
     #等价于
     0101 + (10000 - 0011)
     #等价于
     0101 + ((1 + 1111) - 0011)
     #等价于
     0101 + (1 + (1111 - 0011))
     #等价于
     0101 + (1 + 1100) // 括号内是3（0011）的反码+1，正是补码的定义
     #等价于
     0101 + 1101
     #所以从这里可以得到
     -3 = 1101
     #即'-3'在计算机中的二进制表示 '1101',正是"-3的正值3('0011')的补码('1101')"  10000 - 0011 = 1101
     #最后一步 0101 + 1101 等于 
     10010

   

























