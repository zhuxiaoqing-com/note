Linux 的应用领域
   个人桌面应用领域
   服务器应用领域
   嵌入式应用领域

yum install mlocate 

Linux 是一款操作系统，免费，开源。安全高效稳定，处理高并发强悍

Linux 创始人 linus
linux 吉祥物  是一只企鹅 Tux

Linux 的主要发行版
    Linux 只是一个内d核。有很多公司对 Linux 进行了二次开发，而我们用的就是这个二次开发以后的发行版
    Linux 只是一个内核。这个内核被不同的厂商在内核的基础上做了一些应用程序，在上面做了一些二次开发，
    对内核进行了定制，所以就出现了各种版本的 Linux 系统。
    我们用的都是不同的发行版，是具体的。Linux 只是一个统称
    主要有 CentOSE  Ubuntu   Suse(欧洲人用的比较多)   红旗Linux 国人开发的



Linux 和 Unix
   Linux 是从 Unix 演化来的
   Unix 一开始是开源的，但是有很多公司将其拿取做二级开发，然后收费。
   有人看不惯了然后坚持技术就是要开源的理念，就大伙共同开发出了 Linux

    学习 Linux 需要一个环境，我们需要创建一个虚拟机上安装一个 Centos 系统来学习
    先安装 virtual machine, vm12
    在安装 Linux CentOS 6.8
    
    1.安装 vm 软件 12
    2.通过 vm 软件来创建一个虚拟机空间
    3.通过 vm 软件来在创建好的虚拟空间上，安装我们的 CentOS 操作系统
    4.使用 CentOS

    VM 软件 和 CentOS 的安装软件
    CentOS 下载地址
        网易镜像： http://mirrors.163.com/centos/6/isos/
        搜狐镜像： http://mirrors.sohu.com/centos/6/isos

        1.去 BIOS 里修改设置开启虚拟化设备支持(F2、F10)
        

虚拟机的网络连接三种形式的说明
    1. 桥连接，Linux 可以和其他的系统通信。但是可能造成 Ip 冲突。 和主机不用一个 ip。单独为其分配一个 ip。相当于一个独立的电脑。用路由器的方式将 192.16段分配给 linux
    2. NAT， 网络地址转换方式，linux 可以访问外网。和主机共用一个 Ip 相当于一个软件
    3. 仅主机模式，你的 linux 是一个独立的主机，不能访问外网
 


linux 的共享文件夹会放在 centos 的 /mnt/hgfs/ 下



Linux 基础篇
    Linux 的目录结构
   linux的文件系统是采用及层式的树状目录结构，在次结构中的最上层是根目录"/",然后此目录下
   再创建其他的目录
   在 Linux 世界里，一切皆文件
    /dev 管理设备
    /media  


/bin 是 Binary 这个目录存放着最近常使用的命令
/sbin s就是 Super User 的意思，这里存放的是系统管理员使用的系统管理程序
/home 存放普通用户的主目录，在 Linux 中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。
/root 该目录为系统管理员，也称作超级权限者的用户主目录
/lib 系统开机所需要最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的
    应用程序都需要用到这些共享库。
/lost+found 这个目录一般都是空的，当系统非法关机后，这里就存放了一些文件。
/etc 所有的系统管理所需要的配置文件和子目录
/usr 这个一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的
    program files 目录。
/boot 存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件

/proc 这个目录是一个虚拟的目录，他是系统内存的映射，访问这个目录来获取系统信息。 
/src serivce 缩写，该目录存放一些服务启动之后需要提取的数据
/sys 这个 linux2.6内核的一个很大变化。该目录下安装了2.6内核中新出现的一个文件系统

/tmp 这个目录是用来存放一些临时文件的。
/dev 类似于 windows 的设备管理器，把所有的硬件用文件的形式存储‘
/media linux 系统会自动识别一些设备，例如 U盘、光驱等等，当识别后，linux 会把识别的设备挂载到这个目录下
/mnt 系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在/mnt/上，
然后进入该目录就可以查看里面的内容了
/opt 这是给主机额外安装软件所摆放的目录。如安装ORACLE数据库就可放到该目录下。默认为空
       放安装软件的地方，所有工作时，我们尽量将安装软件放到这个统一的目录下 就是软件安装包
/usr/local 这是另一个给主机额外安装软件所安装的目录。一般是通过编译源码方式安装的程序
/var 这个目录中存放经常修改的文件。日志文件等
/selinux SELinux 是一种安全子系统，它能控制程序只能访问特定文件

linux 的目录中有且只有一个根目录 /
linux 的各个目录存放的内容是规划好的，不用乱放文件
linux 是以文件的形式管理我们的设备，因此 linux 系统，一切皆为文件

vmtool 使得 Linux 和 windows 之间可以互相复制文件
开启 windows 和 linux 的共享文件夹
XShell5 远程登录到 Linux 的软件
XFtp5 上传和下载文件软件

需要 Linux 开启一个 sshd 服务 端口号：22 


2、#安装setuptool
[root@AY1306141252390974e5Z ~]# yum -y install setuptool

3、不用多想了，系统服务管理肯定也是没有在里面，我就直接也装上
[root@AY1306141252390974e5Z ~]# yum -y install ntsysv

4、setup中配套的防火墙设置也得装上去，不然会出现很多selinux上面的问题，比较蛋疼
[root@AY1306141252390974e5Z ~]# yum -y install system-config-securitylevel-tui

5、安装setup中配套的网络设置
[root@AY1306141252390974e5Z ~]# yum -y install system-config-network-tui

6、最后安装一下时区，不然装上软件，会发现时间不对劲的。
[root@AY1306141252390974e5Z ~]# yum -y install system-config-date

==================================

常用快捷键
    1、字符界面，按ctrl +s 键，即可关掉屏幕回显，类似于锁屏。按ctrl + q键即可解锁，注意看键盘，当按下ctrl +s键的时候，
      指示灯scroll lock灯是亮的。
    2.如果是想转而去处理其他事物，可以把tail程序放到后台去（Ctrl+z），
            等处理完其他事情，再用 fg 命令将 tail 命令转到前台来继续查看。
            ctrl + c  退出
    3. yum install mlocate  
    yum(选项)(参数)
        选项
            -h：显示帮助信息；
            -y：对所有的提问都回答“yes”；
            -c：指定配置文件；
            -q：安静模式；
            -v：详细模式；
            -d：设置调试等级（0-10）；
            -e：设置错误等级（0-10）；
            -R：设置yum处理一个命令的最大等待时间；
            -C：完全从缓存中运行，而不去下载或者更新任何头文件。
        参数
            install：安装rpm软件包；
            update：更新rpm软件包；
            check-update：检查是否有可用的更新rpm软件包；
            remove：删除指定的rpm软件包；
            list：显示软件包的信息；
            search：检查软件包的信息；
            info：显示指定的rpm软件包的描述信息和概要信息；
            clean：清理yum过期的缓存；
            shell：进入yum的shell提示符；
            resolvedep：显示rpm软件包的依赖关系；
            localinstall：安装本地的rpm软件包；
            localupdate：显示本地rpm软件包进行更新；
            deplist：显示rpm软件包的所有依赖关系。
            

=======================================


vi 和  vim 
 vi 是 linux 内置的
 vim 是 vi 的增强版
vi 和  vim  的三种模式
正常模式：
    以 vim 打开一个档案就直接进入一般模式了(这是默认的模式)。在这个模式中，你可以使用 上下左右 
    按键来移动光标，你可以使用 删除字符 或 删除整行 来处理档案内容，也可以使用 复制 贴上 来处理你的文件数据

插入模式
    按下 i I o O a A r R 等任何一个字母之后才会进入编辑模式，一般来说按 i 即可

命令行模式
    在这个模式当中，可以提供你相关指令，完成读取、存盘、替换、离开 vim、显示行号等的动作
     则是在此模式中达成的。 输入 :wq 保存退出  :q 退出不保存  :q! 不保存强制退出
      :q 如果你查看了一眼，没有修改用  :q 
      :q! 如果你修改了 不想保存用 :q!
    


插入模式是没办法 快捷键的 按 ESC 从 插入模式回到正常模式
YY 赋值  P 粘贴 
paste(粘贴)
vim 和 vi 的快捷键 
    1. 拷贝当前行 yy,拷贝当前行向下的5行(从当前行开始数，向下5行) 5yy  粘贴(p)
    2. 删除当前行 dd,删除当前行向下的 5 行 5dd
    3. 在文本中查找某个单词[命令行下 / 关键字，回车查找，输入 n 就是查找下一个]
    4. 设置文件的行号，取消文件的行号 [命令行下 :set nu 和 set nonu]   就是 set number
    5. 编辑 /etc/profile 文件,使用快捷键到底文档的最末行[G]和最首行[gg] 这些都是在正常模式下执行的
    6. 在一个文件中输入 "hello",然后又撤销这个动作 u 这些都是在正常模式下执行的
    7. 编辑 /etc/profile 文件,并将光标移动到 20 行 shift + g
        第一步 显示 行号 :set nu          
        第二步 输入 要跳转的行号
        第三步 shift + g

 Ctrl+r 恢复上一步被撤销的操作
u   撤销上一步的操作

在 vim 中使用 Ctrl-O 执行后退，使用 Ctrl-I 执行前进。


关机重启命令
    shutdown -h now 立即进行关机
    shutdown -h 1   一分钟以后关机
    shutdown -r now 立即重新启动
    halt            关机
    reboot          重启
    sync            把内存的数据同步到磁盘

    注意细节：
        不管是重启系统还是关闭系统，首先要运行 sync 命令，把内存中的数据写到磁盘中

用户登录和注销
    基本介绍：
        1. 登录时尽量少用 root 账号登录，以为它是系统管理员，最大的权限，避免操作失误。可以利用普通用户登录，
           登录后再用 "su-用户名"命令来切换成系统管理员身份
        2. 在提示符下输入 logout 即可注销用户 你注销的只是你远程登录的账号。意思是与 linux 的连接断开了
    使用细节：
        1. logout 注销指令再图形运行级别无效，在运行级别3下有效
          图形运行级别 指的就是 在本机上是无效的。但是你是远程登录的话就是有效的
       

-------------------------------------------------------------------------

实操篇  
  用户管理
    用户家目录的概念
      /home/
        目录下有各个创建的用户对于的家目录，当用户登录时，会自动的进入自己的家目录。
        用组来管理用户，用家目录来管理用户可以进入哪个文件夹

    1. Linux 系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，
        然后以这个账号的身份进入系统。
    2. Linux 的用户需要至少要属于一个组。

 1. 添加用户
    基本语法 pwd 查看当前用户所在的目录 /home/hah
       useradd[选项] 用户名   passwd 用户名 修改用户名的密码
    如果创建用户的时候没有指定将用户加入哪个组，那么就会默认创建一个组，名字和 用户名一样
        并且将 用户加入到 新创建的组里面

        cd 表示 change directory 切换目录

    也可以通过 useradd -d 指定目录 新的用户名，给新创建的用户指定家目录
    不要先前创建 指定的目录  不然会有错误

        细节说明
            1.当创建用户成功后，会自动的创建和用户名同名的家目录
            2.也可以通过 useradd -d 指定目录 新的用户名，给新创建的用户指定家目录
            3.当你登录以后会自动进入相应的用户的根目录，比如 root 进去的默认地址就是  /root
                xm 进去以后就是 /home/xm
 2. 指定或修改密码
      基本语法
        passwd 用户民

 3. 删除用户
      基本语法
        userdel 用户名
      应用案例
        删除用户 xm,但是要保留家目录
            userdel 用户名 删除了用户，但是家目录没有删除
        删除用户 xh,以及用户主目录
            userdel -r 用户名 就可以了
       注意要点： 
        1. 如果你给新创建的用户指定的家目录，是你之前就创建的，那么这个家目录是不会被删除的
        2. 如果你要删除的用户正在使用 linux 的话是不能删除的 会有 user xq is currently used by process 3525       
        一般来讲我们都保留家目录

4. 查询用户信息
    基本语法
       id 用户名
        uid=0(root) gid=0(root) 组=0(root) 
        用户id       组 id       组名称 root
     用户不存在，返回无此用户

5.切换用户    
    介绍
       在操作 Linux 中，如果当前用户的权限不够,可以通过 su- 指令，切换到高权限用户
    基本语法
       su - 切换用户民
    细节说明
        从权限高的用户切换到权限低的用户，不需要输入密码，反之需要
        当需要返回到原来的用户时，使用 exit 指令，和 logout 也可以

6.查看当前用户/登录用户
    whoami/who am i    后面的可以获取详细信息，前面的指令获取的信息是简单的
   
7.用户组
    介绍
        类似于角色，系统可以对有共性的多个用户进行统一管理
    新增组
        groupadd 组名
    删除组
        groupdel 组名
    增加用户时直接加上组
        useradd -g 用户组 用户名
    修改用户的组
        usermod -g 用户组 用户名
    
    用户和组相关的文件
        /etc/passwd 文件
            用户(user)的配置文件，记录用户的各种信息
            每行的含义：用户名:口令:用户标识符:组标识符:注释性描述:主目录:登录Shell
        /etc/shadow
            口令的配置文件
            每行的含义：登录名:加密口令:最后一次修改时间:最小间隔时间:最大间隔时间:警告时间:不活动时间:失效时间:标志
        /etc/group
            组的配置文件，记录 Linux 包含的组的信息
            每行的含义：组名:口令:组标识符:组内用户:组内用户列表


8.指定运行级别
    0 关机
    1 单用户[找回丢失密码] 不需要密码就可以登录
    2 多用户状态没有网络服务
    3 多用户状态有网络服务
    4 系统未使用保留给用户 现在是保留 linux 还没有使用
    5 图形界面
    6 系统重启 
   常用运行级别是3和5，要修改默认的运行级别可改文件
   /etc/inittab的  id:5 initdefault: 这一行中的数字 5 就是当前的运行级别
   命令：init[0123456] 要进入的哪个模式，就进入 3 和 5    4 不要随便进入！！！

    如何找回丢失的 root 密码
       思路： 进入到单用户模式，然后修改 root 密码。因为进入单用户模式，root 不需要密码就可以登录
        按 f2 进入 一个界面 。按 小 e ,然后输入 "空格1" 按 Enter 然后回到了 原来的界面 再按 b
    老师版介绍：
        开机-->在引导时输入 回车键(或F2)-->看到一个界面输入 e --> 看到一个新的界面，选中第二行(编辑内核)再输入 e
        --> 在这行的最后输入 "空格1" --> 在输入回车键-->再次输入 b，这个就会进入到单用户模式。
        这时，我们就进入到单用户模式，使用 passwd 修改密码就好了

        你只有在 linux 本机上才可以这么操作

    设置我们的默认的运行级别 
        使用  /etc/inittab
            修改 id:5 initdefault 中的 5这个数字 换成我们想要进入的运行级别

    setup 进入设置指令
  9.帮助指令
        man 获取帮助信息
            基本语法
                man[命令或配置文件](功能描述:获取帮助信息)
            应用实例
            案例：查看 ls 命令的帮助
        help 指令  
            基本语法
                help 命令(功能描述:获得shell内置命令的帮助信息)
                chmod --help
            
10.文件目录类
    1.pwd 显示当前工作目录的绝对路径
    2.ls [选项] [目录或文件]
       常用选项
          -a 显示当前目录所有的文件和目录,包括隐藏的
          -l 以列表的方式显示信息
    3.cd指令
        cd[参数] 切换到指定的目录
        常用参数
            绝对路径和相对路径
            cd ~ 或者cd  回到自己的家目录
            cd.. 回到当前目录的上一级目录
            cd" 表示输入好多东西 输出 第二个"结束
    4.mkdir 指令
        mkdir [选项] 要创建的目录
            常用选项
                -p 创建多级目录 默认 mkdir 只能在存在的文件下面创建目录
    5.rmdir 指令
        rmdir 删除的是空目录，如果目录下有内容时无法删除
        提示：如果需要删除非空目录，需要使用 rm -rf 要删除的目录
    6.touch 指令
        touch 指令创建空文件
        touch 文件名称1 [文件名称2]  可以一次性的创建多个文件
    7.cp 指令
        cp 指令拷贝文件到指定目录
        基本语法
            cp[选项]source(要复制的文件) dest(要复制到到哪个文件夹)
                不能拷贝目录，如果你要拷贝目录要带上 -r
            常用选项
                -r:递归复制整个文件夹
             使用细节:
                强制覆盖不提示的方法: \cp
                    \cp -r  test zwj 
                    一般的不加 \ 
                    cp -r  test zwj 
    8.rm指令  
        rm指令移除文件或目录
        基本语法
            rm [选项] 要删除的文件或目录
            常用选项
                -f:强制删除不提示  linux 删除文件会提示是否删除
                -rf:删除整个文件夹
    9.mv指令(move移动)
        mv 移动文件或目录或重命名
            基本语法
              mv oldNameFile newNamFile 重命名
              mv /temp/movefile /targetFolder 移动文件
            什么时候是移动什么时候是重名名。
            默认是移动的，当 linux 想移动文件的时候，发现要移动的文件在目的地文件已经有了，
            就将其改名了。
            其实应该是先判断要移动的目录在不在同一级目录下，要移动的目录是不是存在，不在的话就改名，
                存在的话就移动
    10.cat指令
        cat查看文件的内容
        基本语法
            cat [选项] 要查看的文件
            常用选项
             -n :显示行号
         使用细节
            cat 只能浏览文件，而不能修改文件,为了浏览方便,一般会带上 管道命令 | more
    11.more指令
        more 文件
        more 指令是一个机遇 vi 编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。
        more指令中内置了若干个快捷键，详见操作说明
            space(空格键) 代表下翻一页
            Enter 代表向下翻一行
            q 代表立刻离开 more,不再显示该文件内容 就是代表回到 命令行，后面的不看了
            Ctrl+F 向下滚动一屏幕
            Ctrl+B 返回上一屏幕
            = 输出当前行的行号
            :f 输出文件名和当前行的行号

    12.less 指令
        less 指令用来分屏查看文件内容。它的功能与 more 指令类似,但是比more指令更加强大，支持
        各种显示终端。less指令在显示文件内容时,并不是一次将整个文件加载之后才显示,而是根据显示需要
        加载内容,对于显示大型文件具有较高的效率
          空白键 向下翻动一页
          [pagedown] 向下翻动一页
          [pageup] 向上翻动一页
          /字符 向下搜寻字符的功能 n:向下查找 N:向上查找
          ?字符 向上搜寻字符的共能 n:向下查找 N:向上查找
          q  离开 less 这个程序 
    13.>指令和 >>指令
        >输出重定向和 >>追加
        ls -l > 文件  列表中的内容写入文件 a.txt 中(覆盖写)
        ls -al>>文件  列表中的内容追加到文件 aa.txt的末尾
        cat 文件1 > 文件2 将文件1的内容覆盖到文件2
        echo "内容" >> 文件 将其内容写到 文件中
        如果文件不存在就自动将其创建
        案例
            将 /home 目录下的文件列表写入到 /home/info.txt 中
            将当前日历信息 追加到 /home/mycal 文件中 [提示 cal 为日历]
        cal 表示显示当前日历 linux文件可以不指定后缀，后缀名无所谓的
    14.echo指令
        echo 输出内容到控制台
        基本语法
            echo [选项] [输出内容]  一般拿来输出环境变量
            echo $PATH  $应该代表着环境变量
    15.head指令
        head用于显示文件的开头部分内容,默认情况下head指令显示文件的前10行内容
        基本语法
            head 文件 查看文件头10行的内容   cat  more less
            head -n 5 文件 查看文件头5行内容，5可以是任意行数

    16.tail指令
        tail指令用于输出文件中尾部的内容，默认情况下 tail 指令显示文件的后10行内容。
        基本语法
            1.tail 文件 查看文件后10行内容
            2.tail -n 5  查看文件后5行内容
            3.tail -f 文件 实时追踪该文档的所有更新，工作中经常用
            如果是想转而去处理其他事物，可以把tail程序放到后台去（Ctrl+z），
            等处理完其他事情，再用 fg 命令将 tail 命令转到前台来继续查看。
            ctrl + c  退出

    17.ln指令
        软链接也叫符号链接，类似于windows里的快捷方式,主要存放了链接其他文件的路径
            和 windows 的桌面快捷方式一个意思
        基本语法
            ln -s [原文件或目录] [软链接名] 给原文件创建一个软链接
        细节说明:当我们使用pwd指令查看目录时，仍然看到的是软连接所在的目录
        ln -s /root linkToRoot     linkToRoot 不需要先创建
        cd linkToRoot 就能跳转过去
        删除 ln 指令，因为ln 指令属于目录
         rm -rf linkToRoot  删除 linkToRoot/ 后面不要带 / 否则是删除 linkToRoot 里面的东西
    18.history 指令
        查看已经执行过的历史命令，也可以执行历史指令
        基本语法
            history 
        执行 history 上面执行过的指令
        !指令编号  


2.时间日期类
    1.date 指令-显示当前日期
     基本语法
        1.date  显示当前时间
        2.date +%Y 显示当前年份
        3.date +%m 显示当前月份
        4.date +%d 显示当前是哪一天
        5.date "+%Y-%m-%d %H:%M:%S"  显示年月日时秒分
      date 指令-设置时间
        date -s 字符串时间
        date -s "2018-5-7 20:18:50"
    2.cal指令
        查看日历指令
          基本语法
           cal [选项] 不加选项，显示本月日历

3.搜索查找类
    1.find指令
        find指令将从指定目录向下递归地遍历其各个子目录,将其满足条件的文件或者目录显示在终端。
        基本语法
            find [搜索范围] [选项]
            选项说明
                -name<查询方式>  按照指定的文件名查找模式查找文件
                -user<用户名>    查找属于指定用户名所有文件
                -size<文件大小>  按照指定的文件大小查找文件
            案例一
                按文件名：根据名称查找/home目录下的hello.txt文件
                按拥有者：查找/opt目录下，用户名称为 nobody的文件
                    根据 文件是属于哪个用户的
                查找整个linux系统下大于20m的文件(+n 大于 -n 小于 n 等于)
                    find /root -size  +2M
                    find /root -size  +2k
                    Ctrl+C 结束搜索
                    find / -name *.txt
    2.locate 指令
        locate 指令可以快速定位文件路径。locate 指令利用事先建立的系统中所有文件名称及路径的 locate 数据库
        实现快速定位给定的文件。Locate指令无需遍历整个文件系统，查询速度较快，为了保证查询结果的准确度,管理员必须
        定期更新 locate 时刻.
        基本语法
            locate 搜索文件
            特别说明
            由于 locate 指令基于数据库进行查询,所以第一次运行前，必须使用 updatedb 指令来创建 locate 数据库。
        使用 locate 必须要有
            前提是 有yum源才能  使用 yum install   。。。
                yum install mlocate  
                updatedb
                locate  就能用了
    3.grep 指令和管道符号 |
        grep 过滤查找,管道符"|",表示将前一个命令的处理结果输出传递给后面的命令处理。
        基本语法
        grep [选项] 查找内容 源文件
            -n 显示匹配行及行号
            -i 忽略字母大小
        cat a.txt | grep -n yes
        匹配关键字所在的行，将所有有关键字的行全部显示出来

4.压缩和解压类
    1.gzip/gunzip 指令
     gzip 用于压缩文件 gunzip 用于解压的
     基本语法
        gzip 文件 压缩文件，只能将文件压缩为 *.gz 文件
        gunzip 文件.gz  解压缩文件命令 应该是只能解压 .gz 后缀的压缩文件
        压缩完以后原来的文件会消失 变成 a.txt.gz 
    2.zip/unzip 指令
        zip 用于压缩文件，unzip用于解压的，这个在项目打包发布中很有用的
            基本语法
                zip [选项] XXX.zip 将要压缩的内容     压缩文件和目录的命令
                unzip[选项] XXX.zip 解压缩文件
                压缩后原来的文件不会消失
            zip 常用选项
                -r 递归压缩，即压缩目录
            unzip 的常用选项
                -d<目录> 指定解压后文件的存放目录
            解压后原来的文件不会消失
    3.tar 指令
        tar 指令是打包指令，最后打包后的文件 .tar.gz 的文件
        基本语法
           tar [选项] XXX.tar.gz 打包的内容 打包目录，压缩后的文件格式.tar.gz
           选项说明
              -c 产生.tar打包文件   压缩
              -v 显示详细信息       显示进度动画
              -f 指定压缩后的文件   f 后面必须跟上要处理的文件名   
              -z 打包同时压缩       表示通过 gzip 支持压缩或解压缩。
              -x 解包.tar文件       解压缩
          案例
            压缩多个文件，将 /home/a.txt 和/home/c.txt 压缩成 a.tar.gz 
                tar -zcvf a.tar.gz a.txt c.txt
                顺序可以变但是字母不能少  v 可以没
            将/home的文件夹 压缩成 myhome.tar.gz
                tar -zcvf myhome.tar.gz /home/
            将 a.tar.gz 解压到当前目录
                tar -zxvf a.tar.gz
            将 myhome.tar.gz  解压到 /opt 目录下
                tar -zxvf myhome.tar.gz -C /opt/
                指定的解压的目录要存在

        
        这些都是tar的参数。.tar.gz是一个压缩包，.tar只是打包而没有压缩，注意这点。
        z：通过gzip支持压缩或解压缩。还有其他的压缩或解压缩方式，比如j表示bzip2的方式。
        x：解压缩。c是压缩。
        v：在压缩或解压缩过程中显示正在处理的文件名
        f：f后面必须跟上要处理的文件名。也就是说你不能写成这样 tar -zxfv zhcon-0.2.5.tar.gz




5.linux 组管理和权限管理
    文件
        1.所有者 这个文件是谁的
        2.所在组 这个文件是哪个组的
        3.其他组 除去所在组的其他组
        4.改变用户所在的组
    1.所有者
        一般为文件的创建者，谁创建了该文件，就自然的成为了该文件的所有者
        查看文件的所有者/目录所在组
            指令 ls -ahl 
            应用实例：
                创建一个组 police,在创建一个用户 tom,然后使用 tom 来创建一个文件， ok.txt 看看情况如何
        修改文件的所有者
            指令 chown 用户名 文件名
            应用实例
                要求：使用root 一个文件 apple.txt 然后将其所有者修改成 tom
                    chown tom apple.txt 所有者改变了，但是其所有组并没有改变
    2.修改文件所在的组
            基本指令
                chgrp 组名 文件名
    3.其他组
        除文件的所有者和所在组的用户外，系统的其他用户都是文件的其他组。
      改变用户所在组
      在添加用户时，可以指定将该用户添加到哪个组中，同样的用 root 的管理权限可以改变某个用户所在的组。
      基本指令
        usermod -g 组名 用户名
        usermod -d 目录名 用户名  改变用户登录的初始目录
      应用实例：
        创建一个土匪组(bandit)将 tom 这个用户从原来所在的 police 组，修改到 bandit (土匪)组




6.权限管理  
    ls -l 中显示的内容如下：
        -rwxrw-r--  root root 1213 Feb 2 09:39 abc
        drwxr-xr-x. 4 tom  police 4.0K 5月  6 03:55 .mozilla
        0123456789
        文件类型     
    drwxr-xr-x
    0-9位说明
        1.第0位确定文件类型(d,-,l,c,b)
            -   
            l 是链接，相当于windows 的快捷方式
            d 是目录，相当于windows 的文件夹
            c 是字符设备文件，鼠标，键盘算是
            - 普通文件
            b 块文件 硬盘
        2.第1-3位确定所有者(该文件的所有者)拥有该文件的权限。 --User
            rwx
            r 读的权限 read
            w 写的权限 write
            - 代表没有权限
            x 代表可执行 execute
        3.第4-6位确定所属组(同用户组的)拥有该文件的权限，也就是文件所在组的用户的权限 --Group
            rw-
            r 读的权限
            w 写的权限
            - 代表没有权限  
            
        4.第7-9位确定其他用户拥有该文件的权限，表示文件其他组的用户的权限 --Other

     4
        如果是文件，表示硬链接的数，如果是目录则表示该目录的子目录个数
     tom
        表示该文件的所属的用户
     police 
        表示该文件的所属的组
     4.0K
        表示文件的大小，以字节为单位，默认是没有单位显示的，如果是目录这个数字就是 4096 
            也就是 4.0K 
     5月  6 03:55
        表示文件最后的修改时间
     .mozilla
        文件名称
     
    rwx 权限详解
       rwx 作用到文件
        [r] 代表可读(read) 可以读取，查看
        [w] 代表可写(write) 可以修改，但是不代表可以删除该文件，删除一个文件的前提条件是对该文件
            所在的目录有写权限，才能删除该文件
        [x] 代表可执行(execute) 可以被执行
       rwx 作用到目录
        [r]代表可读(read)可以读取，ls查看目录内容
        [w]代表可写(write)可以修改，目录内创建+删除+重命名目录
        [x]代表可执行(execute):可以进入该目录
   
   文件及目录权限实际案例
      ls -l 中显示的内容如下：
        -rwxrw-r-- 1 root root 1213 Feb 2 09:39 abc
        10个字符确定不同的用户能对文件干什么
        第一个字符代表文件类型：文件(-) 目录(d) 连接(l)
        第一组rwx：文件拥有者的权限是读、写、执行
        第二组rw-：与文件拥有者同一组的用户的权限是读、写 不能执行
        第三组r--: 与文件拥有者不同组的用户的权限是读 不能写和执行
       可用数字表示为：r=4,w=2,x=1 因此 rwx = 4 + 2 + 1 = 7
        1               文件：硬链接数 目录：子目录数
        root            用户
        root            组
        1213            文件大小(字节)，如果是文件夹，显示 4096(4.0K)字节
        Feb 2 09:39     最后修改时间
        abc             文件名
        
drwx------. 4 tom  police 4.0K 5月   7 22:39 .
drwxr-xr-x. 7 root root   4.0K 5月   7 22:24 ..
. 代表当前目录
.. 代表上一级目录

    对于文件的大小
        如果文件创建了没有编辑过就是 0
        如果创建了编辑过，(进入过插入模式并且输入过字符，输入然后删除再保存也算)，
            就会变成 1 字节，然后文件的总大小就是文件里面的字符数+1 等于文件总大小


7.修改权限
    基本说明：通过 chmod 指令，可以修改文件或者目录的权限
    第一种方式：+ - = 变更权限
     u:所有者(所在的人) g:所有组(所在的组) o:其他人 a:所有人(u、g、o 的总和)
    1.chmod u=rwx,g=rx,o=x 文件/目录名
    2.chmod o+w 文件用户名
    3.chmod a-x 文件目录名
    案例演示
        1.给 abc 文件的所有者读写执行的权限，给所在组读的执行权限，给其他组读执行权限
        2.给 abc 文件的所有者除去执行的权限，增加组写的权限
            chmod u-x,g+w abc
        3.给 abc 文件的所有用户添加读的权限
mod：modify 修改
    在 linux 下面 可执行文件会默认变成绿色

    第二种方式 通过数字变更权限
        r=4 w=2 x=1 因此 rwx = 4 + 2 + 1 = 7
        chmod u=rwx,g=rx,o=x 文件目录名 
        相当于 chmod 751 文件目录名
        数字的修改是从后往前数的比如
            chmod 75 那么默认就是 chmod 075

    2. 修改文件所有者-chown
        chown newowner file  改变文件的所有者
        chown newowner:newgroup file 改变用户的所有者和所有组
        -R 如果是目录则使其所有子文件或目录递归生效
            chown -R tom kkk/

    3.修改文件所在组-chgrp
        基本语法
            chgrp newgroup file 改变文件的所有组
            -R 如果是目录则使其所有子文件或目录递归生效

最佳实践：警察和土匪游戏
    police  bandit
    jack,jerry 警察
    xh,xq:土匪
    1.创建组
    2.创建用户
    3.jack创建一个文件，自己可以读写，本组人可以读，其他组没有任何权限
    4.jack修改该文件，让其他组人可以读，本组人可以读写
    4.xh投靠警察，看看是否可以读写

1、字符界面，按ctrl +s 键，即可关掉屏幕回显，类似于锁屏。按ctrl + q键即可解锁，注意看键盘，当按下ctrl +s键的时候，
    指示灯scroll lock灯是亮的。
    更改用户组后需要重新登录才能有原来的权限

===============================================
8. crontab 任务调度
    crontab 进行定时任务的设置
   任务调度：是指系统在某个时间执行的特定的命令或程序
   任务调度分类：
        1.系统工作：有些重要的工作必须周而复始得执行.如病毒扫描，数据库数据备份等
        2.个别用户工作：个别用户可能希望执行某些程序，比如对 mysql 数据库的备份、
   基本语法
       crontab [选项]
   常用选项
       -e 编辑 crontab 定时任务
       -l 查询 crontab 任务
       -r 删除当前用户所有的 crontab 任务
      service crond restart 重启任务调度

   快速入门
    设置任务调度文件：/etc/crontab
    设置个人任务调度。执行 crontab -e 命令
    接着输入任务到调度文件
    如： */1 * * * * ls -l /etc >> /tmp/to.txt
     每分钟执行  ls -l /etc/ >> tmp/to.txt
    参数细节说明
        5 个占位符的说明
        项目        含义                    范围
        第一个 *    一小时当中的第几分钟     0-59
        第二个 *    一天当中的第几小时       0-23
        第三个 *    一个月当中的第几天       1-31
        第四个 *    一年当中的第几月         1-12
        第五个 *    一周当中的星期几         0-7 0和7都代表星期日


    . 特殊符号的说明
         特殊符号      含义
            *         代表任何时间。比如第一个 * 就代表一个小时每分钟都执行一次的意思
            ,         代表不连续的时间。比如"0 8,12,16 * * *" 命令，就代表在每天的 8点0分，12点0分，
                          16点0分都执行一次
            -         代表连续的时间范围。比如"0 5 * * 1-6"命令，代表在周一到周6的凌晨5点0分执行命令
            */n       代表每隔多久执行一次。比如 */10 * * * * 命令，代表每隔10分钟就执行一遍命令
                



    1.如果只是简单的任务，可以不用写脚本，直接在 crontab 中加入任务即可。
    2.对于比较复杂的任务，需要写脚本(Shell编程)
    步骤如下
       1. crontab -e 
       2.  */1 * * * * ls -l /etc >> /tmp/to.txt
       3. 保存退出后程序就开始了
       4. 在每一分钟都会自动的调用  ls -l /etc >> /tmp/to.txt

    案例：
        1. 每隔1分钟，就将当前的日期信息，追加到 /tmp/mydate 文件中
            1.先编写一个文件  /home/mytask1.sh  脚本里面可以写多个执行语句
                date >> /tmp/mydate
            2.给mytask1.sh 一个可以执行的权限
            3.crontab -e
            4.*/1 * * * *  /home/mytask1.sh
        2. 每天凌晨2:00 将 mysql 数据库 testdb,备份到文件中 mydb.bak
            1. 先编写一个文件  /home/mytask3.sh
                /usr/local/mysql/bin/mysqldump -u root -p123 testdb > /tmp/mydb.bak
            2. 给 mytask3.sh 一个可以执行权限
                chmod 744 /home/mytask2.sh
            3. crontab -e
            4. 0 2 * * * /home/mytask3.sh
            5 成功


----------------------------------------------

Linux 分区
    原理介绍
        1.Linux 来说无论有几个分区，分给哪一目录使用，它归根结低就只有一个根目录，一个独立且唯一
          的文件结构，Linux 中每个分区都是用来组成整个文件系统的一部分
        
        2.Linux 采用了一种叫"载入"的处理方法，它的整个文件系统中包含了一整套的文件和目录，且将
          一个分区和一个目录联系起来，这时要载入的一个分区将使它的存储空间在一个目录下获得。

    硬盘说明：
        1.Linux 硬盘分为 IDE 硬盘和 SCSI 硬盘，目前基本上是 SCSI 硬盘
        2.对于 IDE 硬盘，驱动器标识符为 "hdx~",其中"hd"表明分区所在设备的类型，这里是指 IDE 硬盘了。
            "x"为盘号(a为基本盘，b为基本从属盘，c为辅助主盘，d为辅助从属盘)，"~"代表分区，前四个分区用
            数字1到4表示，它们是主分区或扩展分区，从5开始就是逻辑分区。例，hda3表示为第一个 IDE 硬盘上的第三个主分区
            或扩展分区，hdb2表示为第二个IDE硬盘上的第二个主分区或扩展分区。
        3.对于SCSI硬盘则标识为"sdx~",SCSI硬盘是用"sd"来表示分区所在设备的类型的，其余则和IDE硬盘的表示方法一样。

    使用 lsblk -f       lsblk(老师不离开)
     查看系统的分区和挂载的情况
        NAME   FSTYPE LABEL UUID                                 MOUNTPOINT
        sr0                                                      
        sda                                                      
        ├─sda1 ext4         5598dd16-97c4-4123-a716-31d78d6066fc /boot
        ├─sda2 swap         abe69a8d-ff36-4823-a6a3-d2a910d7d799 [SWAP]
        └─sda3 ext4         38b2623a-77b4-4207-b751-acbc8bcfb5fc /


    ├─sda1 ext4         5598dd16-97c4-4123-a716-31d78d6066fc /boot
       sda1 分区情况
       ext4 分区类型
       5598dd16-97c4-4123-a716-31d78d6066fc  唯一标识分区的40位不重复的字符串
       /boot    挂载点

    挂载的经典案例
      虚拟机增加硬盘步骤1
      在【虚拟机】菜单中，选择【设置】，然后设备列表里添加硬盘，然后一路【下一步】，中间只有选择磁盘大小的
      地方需要修改，直到完成。然后重启系统(才能识别!)
    
    如何增加一块硬盘
        1.虚拟机添加硬盘
        2.分区    fdisk /dev/sdb
        3.格式化   mkfs -t ext4 /dev/sdb1
        4.挂载     先创建一个目录 /home/newdisk， mount /dev/sdb1  /home/newdisk
            这是临时挂载重启后就没有了。所以你还要设置 自动挂载
        5.设置可以自动挂载(永久挂载,当你重启系统，仍然可以挂载到相应的目录)
            1. vim /etc/fstab
                添加 dev/sdb1             /home/newdisk           ext4    defaults        0 0
            2. 执行 mount -a 即刻生效
        卸载硬盘
            umount /dev/sdb1 或者 umount /newdisk

    磁盘情况查询
        1.查询系统整体磁盘使用情况
          基本语法
            df -lh  df -l 
        2.查询指定目录的磁盘占用情况
          基本语法
            du -h /目录
            查询指定目录的磁盘占用情况，默认为当前目录
                -s 指定目录占用大小汇总
                -h 带计量单位
                -a 含文件
                -max-depth=1 子目录深度   就是只显示一级目录，但是大小还是不变
                -c 列出明细的同时,增加汇总值
        应用实例
            查询 /opt 目录的磁盘占用情况，深度为1 
                du -ach --max-depth=1 /opt

    磁盘情况-工作使用指令
        1.统计 /home 文件夹下文件的个数
            ls -l /home | grep "^-" | wc -l
        2.统计 /home 文件夹下目录的个数
            ls -l /home | grep "^d" | wc -l
                wc -l 表示统计个数
        3.统计 /home 文件夹下文件的个数，包括子文件夹里的
            ls -lR /home | grep "^-" | wc -l
                -R 表示递归统计
        4.统计文件夹下目录的个数，包括子文件夹里面的
             ls -lR /home | grep "^d" | wc -l
        5.以树状显示目录结构
             tree


--------------------------------------

网络配置
    linux 网络环境配置的两种方式
        第一种方式(自动获取)
            登录后，通过界面的来设置 自动获取 ip
            缺点：Linux 启动后会自动获取ip,缺点是每次自动获取的 ip 地址可能不一样。
        第二种方式(指定固定的 ip)
            直接修改配置文件来指定 Ip,并可以连接到外网(推荐)，编辑 vi
            /etc/sysconfig/network-scripts/ifcfg-eth0
    具体的再看视频


进程管理
    1. 在 Linux 中，每个执行的程序(代码)都被称为一个进程。每一个进程都分配一个 ID 号
    2. 每一个进程，都会对应一个父进程，而这个父进程可以复制多个子进程。
    3. 每个进程都可能以两种方式存在的。前台和后台，所谓前台进程就是用户目前的屏幕上可以进行操作的。
        后台进程则是实际在操作的，但由于屏幕上无法看到的进程，通常使用后台的方式执行。
    4. 一般系统的服务都是以后台进程的方式存在，而且都会常驻在系统中。直到关机才会结束。

显示系统执行的进程
    基本介绍
        ps 命令是用来查看目前系统中，有哪些正在执行，以及它们执行的状况。
        可以不加任何参数。
        ps 显示的信息选项
            PID  进程识别号
            TTY  终端机号
            TIME 此进程所消 CPU 时间
            CMD  正在执行的命令或进程名
        ps -a : 显示当前终端的所有进程信息  所有的终端
        ps -u ：以用户的格式显示进程信息    所有的用户
        ps -x : 显示后台进程运行的参数      显示所有参数
        ps -aux | more  分页

        USER        PID     %CPU                    %MEM    VSZ             RSS         TTY                 STAT        START           TIME            COMMAND
        root          1     0.1                     0.0     19360           1532        ?                   Ss          17:19           0:01            /sbin/init
        用户名      进程id   当前进程占用CPU 情况  占用内存  占用虚拟内存      物理内存    使用的终端是哪一个   进程状态    进程启动时间 占用CPU总计时间     进程执行时的命令行
    
        STAT 
        s: 代表休眠
        r：代表正在运行

    Ps 详解
        指令 ps -aux | grep xxx, 比如我看看有没有 sshd 服务
        指令说明
            system V 展示风格
            USER : 用户名称
            PID ： 进程号
            %CPU： 进程占用 CPU 的百分比
            %MEM： 进程占用物理内存的百分比
            VSZ :  进程占用的虚拟内存大小 单位：KB
            RSS ： 进程占用的物理内存大小 单位：KB
            TT  ：终端名称，缩写
            STAT：进程状态，其中 
                S-睡眠，
                s-表示该进程是会话的先导进程
                N-表示进程拥有比普通优先级更低的优先级
                R-正在运行
                D-短期等待
                Z-僵死进程
                T-被跟踪或者被停止等等
            STARTED : 进程的启动时间
            TIME ：CPU 时间,即进程使用 cpu 的总时间
            COMMAND: 启动进程所用的命令和参数，如果过长会被截断显示

    Ps 父进程详解
        基本命令
            ps -ef | more
        ps -ef 是以全格式显示当前所有的进程
        -e 显示所有进程。 -f 全格式
        是 BSD 风格
        UID : 用户 ID
        PID ：进程 ID
        PPID : 父进程 ID
        C : CPU 用于计算执行优先级的因子。数值越大，表明进程是 CPU 密集型运算，执行优先级
            越低;数值越小，表明进程是 I/O 密集型运算，执行优先级会提高
        STIME : 进程启动的时间
        TTY： 完全的终端名称
        TIME: CPU 时间
        CMD : 启动进程所用的命令和参数

  终止进程 kill 和 killall
      介绍
        若是某个进程执行中需要停止，或者是已消耗了很大的系统资源时，此时可以考虑停止该进程。
        使用 kill 命令来完成此项任务
     基本语法
        kill [选项] 进程号  通过进程号杀死进程
        killall 进程名称 通过进程名称杀死进程，也支持通配符。这在系统因负载过大而变得很慢时很有用
        
        -9 表示强迫进程立即停止

    案例
        1.踢掉某个非法登录用户
        2.终止远程登录服务sshd,在适当时候再次重启 sshd 服务
        3.终止多个 gedit 编辑器
            gedit 打开一个 gedit 编辑器
            killall gedit
        4.强制杀掉一个终端
            ps -aux | grep bash
            root       3204  0.0  0.0 108312  1956 pts/2    Ss+  18:13   0:00 /bin/bash
            有 bash 的就是 终端(cmd 窗口)

     查看进程树 pstree
        基本语法
            pstree [选项] 可以更加直观的来看进程信息
            常用选项
                -p 显示进程的 PID
                -u 显示进程的所属用户


    服务 service 管理
      介绍：
        服务 service 本质就是进程，但是是运行在后台的，通常都会监听某个端口，等待其他程序的请求,比如(mysql,sshd 防火墙等)
         因此我们又称为守护进程，是 linux 中非常重要的知识点
                Windows系统提供了服务专用的工作接口，只有符合标准的才是服务，直观来讲，就是只有才管理工
                具->服务的列表里面能找到的才是服务。服务是一种特殊的后台进程；守护进程一般指不是服务，
                但是后台运行给其他程序提供服务的进程。
                Linux系统并没有这套标准，所以服务和守护进程并没有本质区别。
    
        service 管理指令
            service 服务名 start | stop | restart | reload | status
                status 查看状态
                reload 

           在 CentOS7.0后不再使用service 而是 systemctl
       使用案例
         查看当前防火墙的状况，关闭防火墙和重启防火墙。
       
       细节讨论
         1. 关闭或者启用防火墙后，立即生效。[telnet 测试 某个端口即可]
         2. 这种方式只是临时生效，当重启系统后，还是回归以前对服务的设置
         3. 如果希望设置某个服务自启动或关闭永久生效，要使用 chkconfig 指令


    服务 service 管理
        方式1 使用 setup -> 系统服务 就可以看到
        方式2 /etc/init.d/服务名称  ls -l /etc/init.d/

    每一个服务对应每一个运行级别都会设置一个是否自启动。也就是说每一个运行级别的服务都是要单独设置的。
    服务对应的是运行级别

    服务 service 管理
        介绍
         通过 chkconfig 命令可以给各个级别设置自启动/关闭
         基本语法
           1. 查看服务 chkconfig --list | grep xxx
           2. chkconfig 服务名 --list
           3. chkconfig --level 5 服务名 on/off
           关闭所有运行级别下的防火墙
                chkconfig iptables off
    防火墙的服务 为 iptables

   使用细节
    chkconfig 重新设置服务后自启动或关闭，需要重启机器后才生效

动态监控进程
    top 和 ps 命令很相似。它们都用来显示正在执行的进程。Top 与 ps 最大的不同之处，在于 top 在执行一段时间可以
        更新正在运行的进程。
        top [选项]
        -d 秒数  指定 top 命令每隔几秒更新，默认是 3秒在 top 命令的交互模式当中可以执行的命令
        -i   使 top 不显示任何闲置或者僵死进程
        -p   通过指定监控进程 ID 来仅仅监控某个进程的状态

        操作
          P   以 CPU 使用率排序，默认就是此项
          M   以内存的使用率排序
          N   以 PID 排序
          q   退出 top
      案例 
        1.监视特定用户
            top：输入此命令，按回车键，查看执行的进程
            u：  然后输出 "u" 回车 在输入用户名，即可
        2. 终止指定的进程
            top: 输入此命令，按回车键，查看要执行的进程
            k： 然后输入 "k" 回车，再输入要结束的进程 ID 号


2181


监控网络状态
    查看系统网络情况 netstat
    基本语法
        netstat [选项]
          -an 按一定顺序排列输出
          -p  显示哪个进程在调用
    检测主机连接命令 ping 
      查看服务名为 sshd 的服务的网络情况  
    netstat -anp | grep sshd
    
    tcp        0      0 192.168.238.128:22          192.168.238.1:12730         ESTABLISHED 3826/sshd  
        表示有一个远程登录  登录的 Ip 为  192.168.238.1 


    tcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN      2141/sshd      表示正在监听 IPv4 来自的22号 的连接   
tcp        0      0 192.168.238.128:22          192.168.238.1:12730         ESTABLISHED 3826/sshd           
tcp        0      0 :::22                       :::*                        LISTEN      2141/sshd           表示正在监听 IPv6 的22号 的连接    


----------------------------------------

RPM 与 YUM
    RPM
        一种用于互联网下载包的打包及安装工具，它包含在某些 Linux  分发版中。它生成具有 .rpm 扩展名的文件。
        RPM 是 RedHat Package Manager  RedHat 软件包管理工具的缩写


    rpm 包的简单查询指令
    查询已安装的 rpm 列表
        rpm -qa | grep  XXX 查询是否安装了 XXX 软件
            firefox  -45.0.1-1.  el6.centos.x86_64
            软件名称  版本号         软件适用与哪个操作系统的 centos 6.x 64位
            如果是 i686、i386 表示32位系统，noarch表示通用
        
    rpm 包的其他查询指令
        rpm -qa 查询所安装的所有 rpm 软件包
        rpm -qa | more
        rpm -qa | grep X
        rpm -q 软件名包：查询软件是否安装  没有 qa 好用，有些查询不出来
        rpm -qi 软件包名 查询软件信息
        rpm -ql 软件包名 查询软件包中的文件  可以查询软件装在了哪里
        rpm -qf /etc/passwd 查询路径中的文件所属的软件包

        rpm -ivh  安装软件
           i install 
           v varbose  日志
           h hash    进度条

    卸载 rpm 包
        基本语法
            rpm -e RPM包的名称
        如果其他软件包依赖于您要卸载的软件包，卸载时则会产生错误信息
        可以强制删除，但是依赖于该软件包的程序可以无法运行
            rpm -e --nodeps foo
    安装 rpm 包
        基本语法
            rmp -ivh RPM包全路径名称
            参数说明
                i=install 安装
                v=verbose 提示
                h=hash    进度条

    安装 firefox 浏览器
        步骤：先找到 firefox 的安装 rpm 包，你需要挂载上我们安装 centos 的 iso 文件，然后 /media/下找 rpm 找        






YUM 封装了 RPM ，自动下载依赖包
    yum 是一个 shell 前端软件包管理器。基于 RPM 包管理
   yum list | grep xxx软件列表
   yum install xxx 下载安装




JAVAee 定制
    JDK 安装步骤
        先将软件通过 xftp5 上传到 /opt 下
        解压缩到 /opt 
        配置环境变量的配置文件 vim /etc/profile
        JAVA_HOME=/opt/jdk.1.7.0_79
        PATH=%JAVA_HOME%/bin:$PATH
        export JAVA_HOME PATH         输出环境变量，使其生效

        需要注销用户，环境变量才能生效

    3运行级别  logout
    5运行级别  手动注销


第二种
export JAVA_HOME=/opt/jdk1.8.0_181

export JRE_HOME=$JAVA_HOME/jre

export CLASSPATH=$JAVA_HOME/lib/

export PATH=$PATH:$JAVA_HOME/bin


tomcat 安装
   解压缩到 /opt
   启动 tomcat ./startup.sh
   开放端口 vim /etc/sysconfig/iptables
   在里面写
        -A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT
        里面已经有一个 22 的了，复制一份将 8080 改一下就好了

     最后重启防火墙 service iptables restart
     查看防火墙状态 service iptables status

Eclipse  安装
解压到 /opt
启动配置 jre 和 server

./ 代表执行可执行文件 比入 start.sh



桌面路径
    一般桌面的路径都是/home/xxx/Desktop,其中xxx是你的登陆的用户名。如果你使用的是root权限,那么,就是/home/Desktop



Mysql
    看文档
        JAVA_HOME=/opt/jdk1.7.0_79
PATH=/opt/jdk1.7.0_79/bin:/usr/local/mysql/bin$PATH
export JAVA_HOME PATH


source /etc/profile    刷新我们的环境变量 这样就不用重启了，
    适用于各种修改了 etc 文件需要重启的情况，我们只需要刷新即可





wget命令用来从指定的URL下载文件。wget非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性，如果是由于网络的原因下载失败，
wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接
时间的服务器上下载大文件非常有用。

wget(选项)(参数)


选项
-a<日志文件>：在指定的日志文件中记录资料的执行过程；
-A<后缀名>：指定要下载文件的后缀名，多个后缀名之间使用逗号进行分隔；
-b：进行后台的方式运行wget；
-B<连接地址>：设置参考的连接地址的基地地址；
-c：继续执行上次终端的任务；
-C<标志>：设置服务器数据块功能标志on为激活，off为关闭，默认值为on；
-d：调试模式运行指令；
-D<域名列表>：设置顺着的域名列表，域名之间用“，”分隔；
-e<指令>：作为文件“.wgetrc”中的一部分执行指定的指令；
-h：显示指令帮助信息；
-i<文件>：从指定文件获取要下载的URL地址；
-l<目录列表>：设置顺着的目录列表，多个目录用“，”分隔；
-L：仅顺着关联的连接；
-r：递归下载方式；
-nc：文件存在时，下载文件不覆盖原有文件；
-nv：下载时只显示更新和出错信息，不显示指令的详细执行过程；
-q：不显示指令执行过程；
-nh：不查询主机名称；
-v：显示详细执行过程；
-V：显示版本信息；
--passive-ftp：使用被动模式PASV连接FTP服务器；
--follow-ftp：从HTML文件中下载FTP连接文件。

参数
URL：下载指定的URL地址。



使用wget下载单个文件

wget http://www.linuxde.net/testfile.zip





默认安装到 usr/local/bin 里面




关于通过 w 来查询所有用户的主机






----------------------------------------------------------------------------------


关于 sudo 
你只要这样添加就好了
    /etc/sudoers：授权文件，只能由管理员编辑；但一般不用vim直接去编辑，因为可能会出现语法错误，所以一般用专用的编辑工具visudo命令去授权。


sudo命令用法

sudo可让用户以其他的身份来执行指定的指令，预设的身份为root。在/etc/sudoers中设置了可执行sudo指令的用户。若其未经授权的用户企图使用sudo，
    则会发出警告的邮件给管理员。用户使用sudo时，必须先输入当前用户密码，之后有5分钟的有效期限，超过期限则必须重新输入密码。


语法：

sudo [-bhHpV][-s ][-u <用户>][指令] 或 sudo [-klv]


    参数：

描述
-b          在后台执行指令
-H          将HOME环境变量设为新身份的HOME环境变量
-k          结束密码的有效期限，也就是下次再执行sudo时便需要输入密码
-K          同-k
-l          列出目前用户可执行与无法执行的指令
-p          改变询问密码的提示符号
-s          执行指定的shell
-u          以指定的用户作为新的身份。若不加上此参数，则预设以root作为新的身份
-v          延长密码有效期限5分钟
-V          显示版本信息



1.sudo 工作流程
    1)当用户执行 sudo 时，系统于 /etc/sudoers 档案中搜寻该使用者是否有执行 sudo 的权限；

    2)若使用者具有可执行 sudo 的权限后，便让使用者输入用户自己的密码来确认；

    3)若密码输入成功，便开始进行 sudo 后续接的指令(但 root 执行 sudo 时，不需要输入密码)；

    4)若欲切换的身份与执行者身份相同，那也不需要输入密码。


2. visudo单用户授权
    visudo是直接操作/etc/sudoers文件，我们也可以直接 vi /etc/sudoers，但是visudo命令的好处在于，退出/etc/sudoers文件时，
    系统会检查/etc/sudoers语法是否正确。

    root  ALL=(ALL)    ALL #<==找到这一行，大约在80 行左右

    yang1 ALL=(ALL)    ALL #<==新增这行！则yang1用户通过sudo拥有所有权限


    语法解释
    
        用户名
    　  %组名
    　　#UID
    　　$#GID


    

        root                ALL=(ALL)                                       ALL
        使用者账号          登入者的来源主机名=(可切换的身份)                可下达的指令

        详细解释：
        使用者帐号          代表哪个用户使用sudo的权限
        来源主机名称        指定信任用户，即根据w查看[使用者帐号]的来源主机
        可切换的身份        代表可切换的用户角色，和sudo -u结合使用，默认是切换为root.
        可下达的指令        用于权限设置，也可使用!来表示不可执行的命令


   如果是根据组的话就是 
        %组名   ALL=(ALL)   ALL  其他也一样


    不需要密码即可使用 sudo
        %组名   ALL=(ALL)   ALL  NOPASSWD

        NOPASSWD ：表示标签之后的命令都不用输密码
　　     PASSWD：表示标签之后的命令都用输密码
        默认有5分钟的有效期限


3. visudo利用别名授权
    
    公司有很多部门，要方便管理，就可使用别名的方式，如：开发部，运维部，技术支持部，每个部门里多个人，部门之间拥有的
    命令权限也不一样，同一部门权限一样。如果一条一条写的话，写也麻烦，改就更麻烦了。

    别名的使用方法：

    使用方法可通过 man sudoers 


root        ALL=                        (ALL)                            ALL
使用者账号  登入者的来源主机名          可切换的身份                       可下达的指令

User_Alias FULLTIMERS = millert, mikef, dowdy

Host_Alias CSNETS = 128.138.243.0, 128.138.204.0/24, 128.138.242.0

Runas_Alias  OP = root, operator

Cmnd_Alias   PRINTING = /usr/sbin/lpc, /usr/bin/lprm


示例

User_Alias ADMPW = pro1,pro2, pro3, myuser1, myuser2 #配置用户别名ADMPW

Cmnd_Alias ADMPWCOM =!/usr/bin/passwd, /usr/bin/passwd [A-Za-z]*, !/usr/bin/passwd root

#配置命令别名ADMPWCOM    

ADMPW ALL=(root) ADMPWCOM   #指定用户别名里的成员，拥有命令别名里的权限


---------------------------------------------

sentOS 6 以后对 防火墙进行了升级
从 iptables 改成了  firewall 

    firewall-cmd --permanent --zone=public --add-port=8080/tcp
      firewall-cmd --reload



lsof -i :6379 查询 是否有 6379 的端口打开
lsof -i:1-1024      #查看端口1-1024运行情况








-----------------------------------------

Linux查看磁盘目录内存空间使用情况
    
    du
        显示每个文件和目录的磁盘使用空间

        命令参数

        -c或--total  除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。

        -s或--summarize  仅显示总计，只列出最后加总的值。

        -h或--human-readable  以K，M，G为单位，提高信息的可读性。


    df
        显示指定磁盘文件的可用空间

        -a 全部文件系统列表

        -h 方便阅读方式显示

        -i 显示inode信息

        -T 文件系统类型

    
    free [选项]
        内存使用情况
    -b：以Byte为单位显示内存使用情况；
    -k：以KB为单位显示内存使用情况；
    -m：以MB为单位显示内存使用情况；
    -o：不显示缓冲区调节列；
    -s<间隔秒数>：持续观察内存使用状况；
    -t：显示内存总和列；
    -V：显示版本信息。

    实例
        free -m
                    total       used       free     shared    buffers     cached
        Mem:          2016       1973         42          0        163       1497
        -/+ buffers/cache:        312       1703
        Swap:         4094          0       4094

第一部分Mem行解释：

    total：内存总数；
    used：已经使用的内存数；
    free：空闲的内存数；
    shared：当前已经废弃不用；
    buffers Buffer：缓存内存数；
    cached Page：缓存内存数。

关系：total = used + free

第二部分(-/+ buffers/cache)解释:

    (-buffers/cache) used内存数：第一部分Mem行中的 used – buffers – cached
    (+buffers/cache) free内存数: 第一部分Mem行中的 free + buffers + cached

可见-buffers/cache反映的是被程序实实在在吃掉的内存，而+buffers/cache反映的是可以挪用的内存总数。

第三部分是指交换分区。



====================================



Pid 文件的作用 
    mysql pid 文件记录的是当前 Mysqld 进程的 Pid. pid 亦即 Process ID
    未指定 pid 文件时，pid 文件默认名为 主机名.pid, 存放的路径在默认 Mysql 的数据目录。通过 mysqld_safe 启动 mysql 时，
    mysqld_safe 会检查 pid 文件，如果 pid 文件不存在，不做处理;如果文件存在，且 pid 已占用则报错 "A mysqld process already exists",
    ,如果文件存在，但 pid 未占用，则删除 Pid 文件。

    查看 mysql 源码可以知道，mysql 启动后会通过 create_pid_file 函数新建 pid 文件，通过 getpid() 获取当前进程 Pid 并将 pid 写入 pid 文件

    因此，通过 Mysqld_safe 启动时，mysql pid 文件的作用是: 在数据文件是同一份，但端口不同的情况下，防止同一个数据库被启动多次。

    其他 pid 文件也是同理


  | grep    | 就是管道符号

  就是将显示结果给 | 然后由  grep 过滤



curl members.3322.org/dyndns/getip 
查看 Linux 外网 IP

tracert www.baidu.com
查看 windows 外网 IP

ip addr 


linux 控制台出现 > 是因为你 使用了 ' 单引号,我们只需要将 ' 添加成一对 '' 就会结束 






============================

docker 
查看日志
systemctl status docker.service
查看不到全部的 

Jun 29 09:19:58 localhost.localdomain systemd[1]: Starting Docker Application Container Engine...
Jun 29 09:19:58 localhost.localdomain dockerd-current[14566]: time="2018-06-29T09:19:58.510475493-04:00" level=warning msg="could not change group /var/run/docker.sock to docker: group docker not found"
Jun 29 09:19:58 localhost.localdomain dockerd-current[14566]: time="2018-06-29T09:19:58.514488611-04:00" level=info msg="libcontainerd: new containerd process, pid: 14572"
Jun 29 09:19:59 localhost.localdomain dockerd-current[14566]: time="2018-06-29T09:19:59.532192112-04:00" level=warning msg="overlay2: the backing xfs filesystem is formatted without d_type support, which leads to incorrect behavior. Refor...
Jun 29 09:19:59 localhost.localdomain dockerd-current[14566]: Error starting daemon: SELinux is not supported with the overlay2 graph driver on this kernel. Either boot into a newer kernel or disable selinux in docker (--se...-enabled=false)
Jun 29 09:19:59 localhost.localdomain systemd[1]: docker.service: main process exited, code=exited, status=1/FAILURE
Jun 29 09:19:59 localhost.localdomain systemd[1]: Failed to start Docker Application Container Engine.
Jun 29 09:19:59 localhost.localdomain systemd[1]: Unit docker.service entered failed state.
Jun 29 09:19:59 localhost.localdomain systemd[1]: docker.service failed.
Hint: Some lines were ellipsized, use -l to show in full.

会有省略号。主要看 
Jun 29 09:19:59 localhost.localdomain dockerd-current[14566]: Error starting daemon:... 
这种的 dockerd-current Error 
我们可以使用 
journalctl -u docker.service 来查看错误信息


  








  








  






