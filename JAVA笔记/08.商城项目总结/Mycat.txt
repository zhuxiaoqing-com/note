MyCAT介绍


        简单的说，MyCAT就是：
    •一个彻底开源的，面向企业应用开发的“大数据库集群”
    •支持事务、ACID、可以替代Mysql的加强版数据库
    •一个可以视为“Mysql”集群的企业级数据库，用来替代昂贵的Oracle集群
    •一个融合内存缓存技术、Nosql技术、HDFS大数据的新型SQL Server
    •结合传统数据库和新型分布式数据仓库的新一代企业级数据库产品
    •一个新颖的数据库中间件产品

    MyCAT的目标是：低成本的将现有的单机数据库和应用平滑迁移到“云”端，解决数据存储和业务规模迅速增长情况下的数据瓶颈问题。


    MyCAT的关键特性
        •支持 SQL 92标准
        •支持Mysql集群，可以作为Proxy使用
        •支持JDBC连接ORACLE、DB2、SQL Server，将其模拟为MySQL  Server使用
        •支持galera for mysql集群，percona-cluster或者mariadb cluster，提供高可用性数据分片集群
        •自动故障切换，高可用性
        •支持读写分离，支持Mysql双主多从，以及一主多从的模式
        •支持全局表，数据自动分片到多个节点，用于高效表关联查询
        •支持独有的基于E-R 关系的分片策略，实现了高效的表关联查询
        •多平台支持，部署和实施简单


    
什么是 Mycat

    Mycat 背后是阿里曾经开源的知名产品 -- Cobar. Cobar 的核心功能和优势是 Mysql 数据库分片，此产品曾经广为流传，据说
       最早的发起者对 Mysql 很精通，后来从阿里跳槽了，阿里随后开源的 Cobar, 并维持到 2013 年年初，然后，就没有然后了。
    
    Cobar 的思路和实现路径的确不错。基于 Java 开发的，实现了 Mysql 公开的二进制传输协议，巧妙的将自己伪装成一个 Mysql Server
        目前市面上绝大多数 Mysql 客户端工具和应用都能兼容。比自己实现一个新的数据库协议要明智的多，因为生态环境在那里摆着。

    Mycat 是基于 cobar 演变而来，对 cobar 的代码进行了彻底的重构，使用 NIO 重构了网络模块，并且优化了 Buffer 内核，
    增强了聚合，Join 等基本特性，同时兼容绝大多数数据库成为了通用的数据库中间件。

    一个新yi的数据库中间件产品支持 Mysql 集群，或者 mariadb cluster 提供高可用性数据分片集群。你可以像使用 Mysql 一样使用
        mycat 。 对于开发人员来说根本感觉不到 Mycat 的存在





分片策略

    MyCAT支持水平分片与垂直分片：
    •水平分片：一个表格的数据分割到多个节点上，按照行分隔。
    •垂直分片：一个数据库中多个表格A，B，C，A存储到节点1上，B存储到节点2上，C存储到节点3上。



MyCAT通过定义表的分片规则来实现分片，每个表格可以捆绑一个分片规则，每个分片规则指定一个分片字段并绑定一个函数，来实现动态分片算法。

1、Schema：逻辑库，与MySQL中的Database（数据库）对应，一个逻辑库中定义了所包括的Table。
2、Table：表，即物理数据库中存储的某一张表，与传统数据库不同，这里的表格需要声明其所存储的逻辑数据节点DataNode。在此可以指定表的分片规则。
3、DataNode：MyCAT的逻辑数据节点，是存放table的具体物理节点，也称之为分片节点，通过DataSource来关联到后端某个具体数据库上
4、DataSource：定义某个物理库的访问地址，用于捆绑到Datanode上




   	Mycat安装
        第一步：把MyCat的压缩包上传到linux服务器
        第二步：解压缩，得到mycat目录
        第三步：进入mycat/bin，启动MyCat
        启动命令：./mycat start
        停止命令：./mycat stop
        重启命令：./mycat restart

        注意：可以使用mysql的客户端直接连接mycat服务。默认服务端口为8066





配置schema.xml
    Schema.xml作为MyCat中重要的配置文件之一，管理着MyCat的逻辑库、表、分片规则、DataNode以及DataSource。弄懂这些配置，是
    正确使用MyCat的前提。这里就一层层对该文件进行解析。

schema 标签用于定义MyCat实例中的逻辑库
Table 标签定义了MyCat中的逻辑表
dataNode 标签定义了MyCat中的数据节点，也就是我们通常说所的数据分片。
dataHost标签在mycat逻辑库中也是作为最底层的标签存在，直接定义了具体的数据库实例、读写分离配置和心跳语句。

注意：若是LINUX版本的MYSQL，则需要设置为Mysql大小写不敏感，否则可能会发生表找不到的问题。
在MySQL的配置文件中my.ini [mysqld] 中增加一行
　　lower_case_table_names = 1






Mysql的主从复制

   主从复制

     配置需要注意的地方
     1、主DB server和从DB server数据库的版本一致
     2、主DB server和从DB server数据库数据名称一致
     3、主DB server开启二进制日志,主DB server和从DB server的server_id都必须唯一





































































































































